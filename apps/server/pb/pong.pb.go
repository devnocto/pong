// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: pong.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserInput int32

const (
	UserInput_START_GAME      UserInput = 0
	UserInput_PAUSE_GAME      UserInput = 1
	UserInput_LEFT_UP         UserInput = 2
	UserInput_LEFT_DOWN       UserInput = 3
	UserInput_RIGHT_UP        UserInput = 4
	UserInput_RIGHT_DOWN      UserInput = 5
	UserInput_STOP_LEFT_UP    UserInput = 6
	UserInput_STOP_LEFT_DOWN  UserInput = 7
	UserInput_STOP_RIGHT_UP   UserInput = 8
	UserInput_STOP_RIGHT_DOWN UserInput = 9
	UserInput_RESET_GAME      UserInput = 10
)

// Enum value maps for UserInput.
var (
	UserInput_name = map[int32]string{
		0:  "START_GAME",
		1:  "PAUSE_GAME",
		2:  "LEFT_UP",
		3:  "LEFT_DOWN",
		4:  "RIGHT_UP",
		5:  "RIGHT_DOWN",
		6:  "STOP_LEFT_UP",
		7:  "STOP_LEFT_DOWN",
		8:  "STOP_RIGHT_UP",
		9:  "STOP_RIGHT_DOWN",
		10: "RESET_GAME",
	}
	UserInput_value = map[string]int32{
		"START_GAME":      0,
		"PAUSE_GAME":      1,
		"LEFT_UP":         2,
		"LEFT_DOWN":       3,
		"RIGHT_UP":        4,
		"RIGHT_DOWN":      5,
		"STOP_LEFT_UP":    6,
		"STOP_LEFT_DOWN":  7,
		"STOP_RIGHT_UP":   8,
		"STOP_RIGHT_DOWN": 9,
		"RESET_GAME":      10,
	}
)

func (x UserInput) Enum() *UserInput {
	p := new(UserInput)
	*p = x
	return p
}

func (x UserInput) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserInput) Descriptor() protoreflect.EnumDescriptor {
	return file_pong_proto_enumTypes[0].Descriptor()
}

func (UserInput) Type() protoreflect.EnumType {
	return &file_pong_proto_enumTypes[0]
}

func (x UserInput) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserInput.Descriptor instead.
func (UserInput) EnumDescriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

type GameState int32

const (
	GameState_MENU_STATE  GameState = 0
	GameState_PLAY_STATE  GameState = 1
	GameState_PAUSE_STATE GameState = 2
	GameState_STOP_STATE  GameState = 3
)

// Enum value maps for GameState.
var (
	GameState_name = map[int32]string{
		0: "MENU_STATE",
		1: "PLAY_STATE",
		2: "PAUSE_STATE",
		3: "STOP_STATE",
	}
	GameState_value = map[string]int32{
		"MENU_STATE":  0,
		"PLAY_STATE":  1,
		"PAUSE_STATE": 2,
		"STOP_STATE":  3,
	}
)

func (x GameState) Enum() *GameState {
	p := new(GameState)
	*p = x
	return p
}

func (x GameState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameState) Descriptor() protoreflect.EnumDescriptor {
	return file_pong_proto_enumTypes[1].Descriptor()
}

func (GameState) Type() protoreflect.EnumType {
	return &file_pong_proto_enumTypes[1]
}

func (x GameState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameState.Descriptor instead.
func (GameState) EnumDescriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{1}
}

type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

func (x *Size) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Size) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Velocity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vx int32 `protobuf:"zigzag32,1,opt,name=vx,proto3" json:"vx,omitempty"`
	Vy int32 `protobuf:"zigzag32,2,opt,name=vy,proto3" json:"vy,omitempty"`
}

func (x *Velocity) Reset() {
	*x = Velocity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Velocity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Velocity) ProtoMessage() {}

func (x *Velocity) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Velocity.ProtoReflect.Descriptor instead.
func (*Velocity) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{2}
}

func (x *Velocity) GetVx() int32 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *Velocity) GetVy() int32 {
	if x != nil {
		return x.Vy
	}
	return 0
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{3}
}

func (x *Score) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ScoreUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftScore  *Score `protobuf:"bytes,1,opt,name=leftScore,proto3" json:"leftScore,omitempty"`
	RightScore *Score `protobuf:"bytes,2,opt,name=rightScore,proto3" json:"rightScore,omitempty"`
}

func (x *ScoreUpdate) Reset() {
	*x = ScoreUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreUpdate) ProtoMessage() {}

func (x *ScoreUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreUpdate.ProtoReflect.Descriptor instead.
func (*ScoreUpdate) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{4}
}

func (x *ScoreUpdate) GetLeftScore() *Score {
	if x != nil {
		return x.LeftScore
	}
	return nil
}

func (x *ScoreUpdate) GetRightScore() *Score {
	if x != nil {
		return x.RightScore
	}
	return nil
}

type UserAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request   int32     `protobuf:"varint,1,opt,name=request,proto3" json:"request,omitempty"`
	UserInput UserInput `protobuf:"varint,2,opt,name=userInput,proto3,enum=pong.UserInput" json:"userInput,omitempty"`
}

func (x *UserAction) Reset() {
	*x = UserAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAction) ProtoMessage() {}

func (x *UserAction) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAction.ProtoReflect.Descriptor instead.
func (*UserAction) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{5}
}

func (x *UserAction) GetRequest() int32 {
	if x != nil {
		return x.Request
	}
	return 0
}

func (x *UserAction) GetUserInput() UserInput {
	if x != nil {
		return x.UserInput
	}
	return UserInput_START_GAME
}

type Ball struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point    *Point    `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	Velocity *Velocity `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Radius   int32     `protobuf:"varint,3,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *Ball) Reset() {
	*x = Ball{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ball) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ball) ProtoMessage() {}

func (x *Ball) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ball.ProtoReflect.Descriptor instead.
func (*Ball) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{6}
}

func (x *Ball) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *Ball) GetVelocity() *Velocity {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Ball) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type Paddle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point    *Point    `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	Velocity *Velocity `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Size     *Size     `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Ay       int32     `protobuf:"varint,4,opt,name=ay,proto3" json:"ay,omitempty"`
}

func (x *Paddle) Reset() {
	*x = Paddle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paddle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paddle) ProtoMessage() {}

func (x *Paddle) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paddle.ProtoReflect.Descriptor instead.
func (*Paddle) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{7}
}

func (x *Paddle) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *Paddle) GetVelocity() *Velocity {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Paddle) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *Paddle) GetAy() int32 {
	if x != nil {
		return x.Ay
	}
	return 0
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       GameState `protobuf:"varint,1,opt,name=state,proto3,enum=pong.GameState" json:"state,omitempty"`
	Ball        *Ball     `protobuf:"bytes,2,opt,name=ball,proto3" json:"ball,omitempty"`
	LeftPaddle  *Paddle   `protobuf:"bytes,3,opt,name=leftPaddle,proto3" json:"leftPaddle,omitempty"`
	RightPaddle *Paddle   `protobuf:"bytes,4,opt,name=rightPaddle,proto3" json:"rightPaddle,omitempty"`
	LeftScore   *Score    `protobuf:"bytes,5,opt,name=leftScore,proto3" json:"leftScore,omitempty"`
	RightScore  *Score    `protobuf:"bytes,6,opt,name=rightScore,proto3" json:"rightScore,omitempty"`
	ScreenSize  *Size     `protobuf:"bytes,7,opt,name=screenSize,proto3" json:"screenSize,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{8}
}

func (x *Game) GetState() GameState {
	if x != nil {
		return x.State
	}
	return GameState_MENU_STATE
}

func (x *Game) GetBall() *Ball {
	if x != nil {
		return x.Ball
	}
	return nil
}

func (x *Game) GetLeftPaddle() *Paddle {
	if x != nil {
		return x.LeftPaddle
	}
	return nil
}

func (x *Game) GetRightPaddle() *Paddle {
	if x != nil {
		return x.RightPaddle
	}
	return nil
}

func (x *Game) GetLeftScore() *Score {
	if x != nil {
		return x.LeftScore
	}
	return nil
}

func (x *Game) GetRightScore() *Score {
	if x != nil {
		return x.RightScore
	}
	return nil
}

func (x *Game) GetScreenSize() *Size {
	if x != nil {
		return x.ScreenSize
	}
	return nil
}

type ObjectState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Point    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Velocity *Velocity `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
}

func (x *ObjectState) Reset() {
	*x = ObjectState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectState) ProtoMessage() {}

func (x *ObjectState) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectState.ProtoReflect.Descriptor instead.
func (*ObjectState) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{9}
}

func (x *ObjectState) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ObjectState) GetVelocity() *Velocity {
	if x != nil {
		return x.Velocity
	}
	return nil
}

type PlayerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastRequest int32        `protobuf:"varint,1,opt,name=lastRequest,proto3" json:"lastRequest,omitempty"`
	State       *ObjectState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *PlayerState) Reset() {
	*x = PlayerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerState) ProtoMessage() {}

func (x *PlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerState.ProtoReflect.Descriptor instead.
func (*PlayerState) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerState) GetLastRequest() int32 {
	if x != nil {
		return x.LastRequest
	}
	return 0
}

func (x *PlayerState) GetState() *ObjectState {
	if x != nil {
		return x.State
	}
	return nil
}

type StateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       GameState    `protobuf:"varint,1,opt,name=state,proto3,enum=pong.GameState" json:"state,omitempty"`
	Ball        *ObjectState `protobuf:"bytes,2,opt,name=ball,proto3" json:"ball,omitempty"`
	LeftPaddle  *PlayerState `protobuf:"bytes,3,opt,name=leftPaddle,proto3" json:"leftPaddle,omitempty"`
	RightPaddle *PlayerState `protobuf:"bytes,4,opt,name=rightPaddle,proto3" json:"rightPaddle,omitempty"`
	Score       *ScoreUpdate `protobuf:"bytes,5,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *StateUpdate) Reset() {
	*x = StateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate) ProtoMessage() {}

func (x *StateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{11}
}

func (x *StateUpdate) GetState() GameState {
	if x != nil {
		return x.State
	}
	return GameState_MENU_STATE
}

func (x *StateUpdate) GetBall() *ObjectState {
	if x != nil {
		return x.Ball
	}
	return nil
}

func (x *StateUpdate) GetLeftPaddle() *PlayerState {
	if x != nil {
		return x.LeftPaddle
	}
	return nil
}

func (x *StateUpdate) GetRightPaddle() *PlayerState {
	if x != nil {
		return x.RightPaddle
	}
	return nil
}

func (x *StateUpdate) GetScore() *ScoreUpdate {
	if x != nil {
		return x.Score
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Message_Config
	//	*Message_StateUpdate
	//	*Message_UserAction
	Content isMessage_Content `protobuf_oneof:"content"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pong_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{12}
}

func (m *Message) GetContent() isMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Message) GetConfig() *Game {
	if x, ok := x.GetContent().(*Message_Config); ok {
		return x.Config
	}
	return nil
}

func (x *Message) GetStateUpdate() *StateUpdate {
	if x, ok := x.GetContent().(*Message_StateUpdate); ok {
		return x.StateUpdate
	}
	return nil
}

func (x *Message) GetUserAction() *UserAction {
	if x, ok := x.GetContent().(*Message_UserAction); ok {
		return x.UserAction
	}
	return nil
}

type isMessage_Content interface {
	isMessage_Content()
}

type Message_Config struct {
	Config *Game `protobuf:"bytes,2,opt,name=config,proto3,oneof"`
}

type Message_StateUpdate struct {
	StateUpdate *StateUpdate `protobuf:"bytes,3,opt,name=stateUpdate,proto3,oneof"`
}

type Message_UserAction struct {
	UserAction *UserAction `protobuf:"bytes,4,opt,name=userAction,proto3,oneof"`
}

func (*Message_Config) isMessage_Content() {}

func (*Message_StateUpdate) isMessage_Content() {}

func (*Message_UserAction) isMessage_Content() {}

var File_pong_proto protoreflect.FileDescriptor

var file_pong_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x34, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x2a, 0x0a,
	0x08, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x02, 0x76, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x02, 0x76, 0x79, 0x22, 0x1d, 0x0a, 0x05, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x6f, 0x6e,
	0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0x55, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x6e,
	0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x6d, 0x0a, 0x04, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x21,
	0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x6c,
	0x6f, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1e, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x61, 0x79, 0x22,
	0xaf, 0x02, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x62, 0x61, 0x6c, 0x6c, 0x12,
	0x2c, 0x0a, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x64, 0x64, 0x6c,
	0x65, 0x52, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x2e, 0x0a,
	0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65,
	0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x29, 0x0a,
	0x09, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x6c,
	0x65, 0x66, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6f, 0x6e, 0x67,
	0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x62, 0x0a, 0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x27, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x65, 0x6c,
	0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f,
	0x6e, 0x67, 0x2e, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08, 0x76, 0x65, 0x6c,
	0x6f, 0x63, 0x69, 0x74, 0x79, 0x22, 0x58, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0xec, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x62, 0x61, 0x6c, 0x6c, 0x12, 0x31, 0x0a,
	0x0a, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65,
	0x12, 0x33, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x50,
	0x61, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa5,
	0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6f, 0x6e,
	0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x35, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f,
	0x6e, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2a, 0xc3, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x55, 0x50, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x55, 0x50, 0x10, 0x06,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x44, 0x4f,
	0x57, 0x4e, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x52, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x55, 0x50, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x4f, 0x50, 0x5f,
	0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x0a, 0x2a, 0x4c, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x45, 0x4e,
	0x55, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4c, 0x41,
	0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54,
	0x4f, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x03, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pong_proto_rawDescOnce sync.Once
	file_pong_proto_rawDescData = file_pong_proto_rawDesc
)

func file_pong_proto_rawDescGZIP() []byte {
	file_pong_proto_rawDescOnce.Do(func() {
		file_pong_proto_rawDescData = protoimpl.X.CompressGZIP(file_pong_proto_rawDescData)
	})
	return file_pong_proto_rawDescData
}

var file_pong_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pong_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pong_proto_goTypes = []interface{}{
	(UserInput)(0),      // 0: pong.UserInput
	(GameState)(0),      // 1: pong.GameState
	(*Size)(nil),        // 2: pong.Size
	(*Point)(nil),       // 3: pong.Point
	(*Velocity)(nil),    // 4: pong.Velocity
	(*Score)(nil),       // 5: pong.Score
	(*ScoreUpdate)(nil), // 6: pong.ScoreUpdate
	(*UserAction)(nil),  // 7: pong.UserAction
	(*Ball)(nil),        // 8: pong.Ball
	(*Paddle)(nil),      // 9: pong.Paddle
	(*Game)(nil),        // 10: pong.Game
	(*ObjectState)(nil), // 11: pong.ObjectState
	(*PlayerState)(nil), // 12: pong.PlayerState
	(*StateUpdate)(nil), // 13: pong.StateUpdate
	(*Message)(nil),     // 14: pong.Message
}
var file_pong_proto_depIdxs = []int32{
	5,  // 0: pong.ScoreUpdate.leftScore:type_name -> pong.Score
	5,  // 1: pong.ScoreUpdate.rightScore:type_name -> pong.Score
	0,  // 2: pong.UserAction.userInput:type_name -> pong.UserInput
	3,  // 3: pong.Ball.point:type_name -> pong.Point
	4,  // 4: pong.Ball.velocity:type_name -> pong.Velocity
	3,  // 5: pong.Paddle.point:type_name -> pong.Point
	4,  // 6: pong.Paddle.velocity:type_name -> pong.Velocity
	2,  // 7: pong.Paddle.size:type_name -> pong.Size
	1,  // 8: pong.Game.state:type_name -> pong.GameState
	8,  // 9: pong.Game.ball:type_name -> pong.Ball
	9,  // 10: pong.Game.leftPaddle:type_name -> pong.Paddle
	9,  // 11: pong.Game.rightPaddle:type_name -> pong.Paddle
	5,  // 12: pong.Game.leftScore:type_name -> pong.Score
	5,  // 13: pong.Game.rightScore:type_name -> pong.Score
	2,  // 14: pong.Game.screenSize:type_name -> pong.Size
	3,  // 15: pong.ObjectState.position:type_name -> pong.Point
	4,  // 16: pong.ObjectState.velocity:type_name -> pong.Velocity
	11, // 17: pong.PlayerState.state:type_name -> pong.ObjectState
	1,  // 18: pong.StateUpdate.state:type_name -> pong.GameState
	11, // 19: pong.StateUpdate.ball:type_name -> pong.ObjectState
	12, // 20: pong.StateUpdate.leftPaddle:type_name -> pong.PlayerState
	12, // 21: pong.StateUpdate.rightPaddle:type_name -> pong.PlayerState
	6,  // 22: pong.StateUpdate.score:type_name -> pong.ScoreUpdate
	10, // 23: pong.Message.config:type_name -> pong.Game
	13, // 24: pong.Message.stateUpdate:type_name -> pong.StateUpdate
	7,  // 25: pong.Message.userAction:type_name -> pong.UserAction
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_pong_proto_init() }
func file_pong_proto_init() {
	if File_pong_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pong_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Velocity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ball); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paddle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pong_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pong_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Message_Config)(nil),
		(*Message_StateUpdate)(nil),
		(*Message_UserAction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pong_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pong_proto_goTypes,
		DependencyIndexes: file_pong_proto_depIdxs,
		EnumInfos:         file_pong_proto_enumTypes,
		MessageInfos:      file_pong_proto_msgTypes,
	}.Build()
	File_pong_proto = out.File
	file_pong_proto_rawDesc = nil
	file_pong_proto_goTypes = nil
	file_pong_proto_depIdxs = nil
}
